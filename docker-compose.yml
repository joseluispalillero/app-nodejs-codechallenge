version: "3.7"
services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=yape
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/log:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "nc", "-z", "zookeeper", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z", "kafka", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  transactions-ms:
    build: ./transactions-ms
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:29092  # Use internal Kafka broker address
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/yape
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - my_network

  fraud-ms:
    build: ./fraud-ms
    ports:
      - "3001:3001"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - KAFKA_BROKER=kafka:29092  # Use internal Kafka broker address
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
